[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
    "cmake>=3.15",
    "pybind11>=2.10.0",
    "ninja",
]
build-backend = "setuptools.build_meta"

[project]
name = "mkl_example"
version = "1.0.0"
description = "Example package using MKL with dynamic linking"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]

dependencies = [
    "numpy>=1.19.0",
    "mkl>=2023.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=6.0",
    "pytest-cov",
]

[tool.cibuildwheel]
# 只构建Linux平台的wheels
build = "cp38-manylinux* cp39-manylinux* cp310-manylinux* cp311-manylinux* cp312-manylinux*"
skip = "*-musllinux* *i686"

before-all = [
    # 修复 CentOS 7 EOL 问题
    "sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*.repo || true",
    "sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*.repo || true",
    
    # 安装基础工具
    "yum install -y epel-release",
    "yum install -y cmake3 ninja-build wget",
    
    # 添加 Intel oneAPI 仓库 - 使用单行命令
    "echo -e '[oneAPI]\\nname=Intel oneAPI repository\\nbaseurl=https://yum.repos.intel.com/oneapi\\nenabled=1\\ngpgcheck=1\\nrepo_gpgcheck=1\\ngpgkey=https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB' > /etc/yum.repos.d/oneAPI.repo",
    
    # 导入 GPG key
    "rpm --import https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB",
    
    # 清理和更新缓存
    "yum clean all",
    "yum makecache",
    
    # 安装 Intel MKL
    "yum install -y intel-oneapi-mkl-devel-2024.0 || yum install -y intel-oneapi-mkl-devel",
]

# 设置环境变量
environment = {
    MKLROOT="/opt/intel/oneapi/mkl/latest",
    LD_LIBRARY_PATH="/opt/intel/oneapi/mkl/latest/lib/intel64:$LD_LIBRARY_PATH",
    PKG_CONFIG_PATH="/opt/intel/oneapi/mkl/latest/lib/pkgconfig:$PKG_CONFIG_PATH"
}

# 修复wheel，排除MKL库
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel} --exclude libmkl_core.so.2 --exclude libmkl_sequential.so.2 --exclude libmkl_intel_lp64.so.2"

# 测试配置
test-requires = "pytest numpy"
test-command = "python -c 'import mkl_example; print(mkl_example.get_mkl_version())'"