[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
    "cmake>=3.15",
    "pybind11>=2.10.0",
    "ninja",
]
build-backend = "setuptools.build_meta"

[project]
name = "mkl_example"
version = "1.0.0"
description = "Example package using MKL with dynamic linking"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]

dependencies = [
    "numpy>=1.19.0",
    "mkl>=2023.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=6.0",
    "pytest-cov",
]

[tool.cibuildwheel]
# 只构建Linux平台的wheels
build = "cp38-manylinux* cp39-manylinux* cp310-manylinux* cp311-manylinux* cp312-manylinux*"
skip = "*-musllinux* *i686"



# 设置环境变量 - 修正格式
[tool.cibuildwheel.environment]
MKLROOT = "/opt/intel/oneapi/mkl/latest"
LD_LIBRARY_PATH = "/opt/intel/oneapi/mkl/latest/lib/intel64:${LD_LIBRARY_PATH}"
PKG_CONFIG_PATH = "/opt/intel/oneapi/mkl/latest/lib/pkgconfig:${PKG_CONFIG_PATH}"

# 修复wheel，排除MKL库
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel} --exclude libmkl_core.so.2 --exclude libmkl_sequential.so.2 --exclude libmkl_intel_lp64.so.2"

# 测试配置
test-requires = "pytest numpy"
test-command = "python -c 'import mkl_example; print(mkl_example.get_mkl_version())'"