[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
    "cmake>=3.15",
    "pybind11>=2.10.0",
    "ninja",
]
build-backend = "setuptools.build_meta"

[project]
name = "mkl_example"
version = "1.0.0"
description = "Example package using MKL with dynamic linking"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]

dependencies = [
    "numpy>=1.19.0",
    "mkl>=2023.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=6.0",
    "pytest-cov",
]

[tool.cibuildwheel]
# 只构建Linux平台的wheels
build = "cp38-manylinux* cp39-manylinux* cp310-manylinux* cp311-manylinux* cp312-manylinux*"
skip = "*-musllinux* *i686"

# 安装构建依赖
before-all = [
    # --- 开始修复 CentOS 7 EOL 问题 ---
    # 由于 CentOS 7 已停止维护，切换到归档仓库 (vault)
    "sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*.repo",
    "sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*.repo",
    # --- 修复结束 ---

    "yum install -y epel-release",
    "yum install -y cmake3 ninja-build",
    # 安装Intel MKL
    "yum-config-manager --add-repo https://yum.repos.intel.com/mkl/setup/intel-mkl.repo",
    "rpm --import https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB",
    "yum install -y intel-mkl-2024.0",
]

# 设置环境变量
environment = {MKLROOT="/opt/intel/oneapi/mkl/latest", LD_LIBRARY_PATH="/opt/intel/oneapi/mkl/latest/lib/intel64:$LD_LIBRARY_PATH"}

# 修复wheel，排除MKL库
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel} --exclude libmkl_core.so.2 --exclude libmkl_sequential.so.2 --exclude libmkl_intel_lp64.so.2"

# 测试配置
test-requires = "pytest numpy"
test-command = "python -c 'import mkl_example; print(mkl_example.get_mkl_version())'"