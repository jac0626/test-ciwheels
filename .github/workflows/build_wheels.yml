name: Build Linux Wheels

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build_linux_wheels:
    name: Build Linux wheels
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_BUILD_VERBOSITY: 1
          # 只构建Linux平台
          CIBW_PLATFORM: linux

          CIBW_BEFORE_ALL: |
            # Fix CentOS 7 repos
            sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*.repo
            sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*.repo
            
            # Fix aarch64 specific issues
            if [[ "$(uname -m)" == "aarch64" ]]; then
              rm -f /etc/yum.repos.d/CentOS-SCLo-*.repo
            fi
            
            yum clean all
            
            # Install development tools
            yum install -y gcc gcc-c++ gcc-gfortran python3-devel
            
            # Install other dependencies
            yum install -y libaio-devel libcurl-devel ca-certificates
            
            # Install Intel MKL (only for x86_64)
            if [[ "$(uname -m)" == "x86_64" ]]; then
              yum-config-manager --add-repo https://yum.repos.intel.com/mkl/setup/intel-mkl.repo
              rpm --import https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB
              yum install -y intel-mkl-64bit-2020.0-088
            fi
            
            # For OpenMP, use the standard package instead of alibaba-specific ones
            yum install -y libgomp

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: linux-wheels
          path: ./wheelhouse/*.whl

  test_wheels:
    name: Test Linux wheels
    needs: build_linux_wheels
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          name: linux-wheels
          path: ./wheels
      
      - name: Install MKL runtime
        run: |
          pip install mkl mkl-include intel-openmp
      
      - name: Install wheel
        run: |
          pip install ./wheels/mkl_example-*-cp${{ matrix.python-version }}*.whl
      
      - name: Run tests
        run: |
          pip install pytest numpy
          python -c "import mkl_example; print(mkl_example.get_mkl_version())"
          pytest tests/ -v

  publish_pypi:
    name: Publish to PyPI
    needs: [build_linux_wheels, test_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: linux-wheels
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
